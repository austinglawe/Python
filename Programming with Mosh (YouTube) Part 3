## Exceptions
### How to handle errors in your python programs

age = int(input("Age: "))
print(age)
# if person does not enter a number, the program will crash and error will look like:
# ValueError: invalid literal for int() with base 10: 'q'
# Process finished with exit code 1


## try / except
## We can fix it by:
try:
    age = int(input("Age: "))
    income = 20000
    risk = income / age
    print(age)
    print(risk)
except ZeroDivisionError:
    print("Age cannot be 0.")
except ValueError:
    print("Invalid value.")
    
    
    ### Comments
## to add notes
## Explain things about the code
### as reminders to fix things or clean things up
### or just a way to clearly communicate to other developers reading our code
## Commands shouldn't be verbose or repetitive
## Whys and hows, not whats
## too much is bad
print("sky is blue")



##### Classes in Python
## classes are very important in programming, not just python
## we use classes to define new types
## examples of basic types:
## Numbers, Strings, Booleans
## more complex types are:
## Lists
## Dictionaries
### Use classes to define new types to model REAL CONCEPTS


## Pascal naming convention
## here classes are named capitalizing the first letter of each
## word and not having underscores for instance
## EmailContact
## The two words become one but the first letter in each is capitalized
class Point:




















